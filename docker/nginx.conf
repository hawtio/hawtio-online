# Setup a connection zone to control number of connections
limit_conn_zone $binary_remote_addr zone=limitconnbyaddr:20m;
# Return status code for too many connections
limit_conn_status 429;

map $uri $new {
    / /online/;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen              8443 ssl;
    server_name         localhost;
    ssl_certificate     /etc/tls/private/serving/tls.crt;
    ssl_certificate_key /etc/tls/private/serving/tls.key;
    absolute_redirect   off;
    gzip                on;
    root                /usr/share/nginx/html/;

    # Limit a single IP to 75 connections
    limit_conn   limitconnbyaddr  75;

    # Limit the keepalive of connections (60s default)
    keepalive_timeout 60s;

    # Do not show server version
    server_tokens off;

    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
      return 444;
    }

    # Prevent click jacking attacks
    add_header X-Frame-Options "SAMEORIGIN";

    # Only accept newer ssl protocols
    ssl_protocols TLSv1.2 TLSv1.3;

    if ($new) {
        rewrite ^ $new redirect;
    }

    error_page 404 /hawtio-404.html;
    location = /hawtio-404.html {
        internal;
    }

    error_page 500 502 503 504 /hawtio-50x.html;
    location = /hawtio-50x.html {
        internal;
    }

    # Static content serving
    location /online {
        alias     /usr/share/nginx/html/online;
        try_files $uri$args $uri /online/index.html;
    }

    location /integration/ {
        alias     /usr/share/nginx/html/integration/;
        try_files $uri$args $uri /integration/index.html;
    }

    # Kubernetes master API reverse proxying
    location /master {
        proxy_pass                    https://kubernetes.default/;
        rewrite                       /master/(.*) /$1 break;
        proxy_pass_request_headers    on;
        proxy_pass_request_body       on;
        proxy_redirect                off;
        proxy_ssl_verify              on;
        proxy_ssl_trusted_certificate /var/run/secrets/kubernetes.io/serviceaccount/ca.crt;
        proxy_ssl_session_reuse       on;
        proxy_http_version            1.1;
        proxy_set_header Upgrade      $http_upgrade;
        proxy_set_header Connection   $connection_upgrade;
    }

    location /management {
        rewrite /management/namespaces/(.+)/pods/(http|https):(.+):(\d+)/(.*) /master/api/v1/namespaces/$1/pods/$2:$3:$4/proxy/$5 last;
    }

    # Get the OpenShift console URL
    location = /console {
        proxy_pass             https://kubernetes.default/;
        error_page             302 = @console_redirect;
        proxy_intercept_errors on;
    }

    location @console_redirect {
        add_header Location $upstream_http_location always;
        return 200;
    }
}
