{
  "java.util.logging": {
    "type\u003dLogging": {
      "op": {
        "getLoggerLevel": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            }
          ],
          "ret": "java.lang.String",
          "desc": "getLoggerLevel"
        },
        "getParentLoggerName": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            }
          ],
          "ret": "java.lang.String",
          "desc": "getParentLoggerName"
        },
        "setLoggerLevel": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setLoggerLevel"
        }
      },
      "attr": {
        "LoggerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "LoggerNames"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "JMImplementation": {
    "type\u003dMBeanServerDelegate": {
      "notif": {
        "javax.management.MBeanServerNotification": {
          "types": ["JMX.mbean.unregistered", "JMX.mbean.registered"],
          "name": "javax.management.MBeanServerNotification",
          "desc": "Notifications sent by the MBeanServerDelegate MBean"
        }
      },
      "attr": {
        "ImplementationName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The JMX implementation name (the name of this product)"
        },
        "MBeanServerId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The MBean server agent identification"
        },
        "ImplementationVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The JMX implementation version (the version of this product)."
        },
        "SpecificationVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The version of the JMX specification implemented by this product."
        },
        "SpecificationVendor": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The vendor of the JMX specification implemented by this product."
        },
        "SpecificationName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The full name of the JMX specification implemented by this product."
        },
        "ImplementationVendor": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "the JMX implementation vendor (the vendor of this product)."
        }
      },
      "class": "javax.management.MBeanServerDelegate",
      "desc": "Represents  the MBean server from the management point of view."
    }
  },
  "jdk.management.jfr": {
    "type\u003dFlightRecorder": {
      "op": {
        "getRecordingOptions": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "getRecordingOptions"
        },
        "takeSnapshot": {
          "args": [],
          "ret": "long",
          "desc": "takeSnapshot"
        },
        "closeRecording": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "void",
          "desc": "closeRecording"
        },
        "newRecording": {
          "args": [],
          "ret": "long",
          "desc": "newRecording"
        },
        "setRecordingSettings": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "javax.management.openmbean.TabularData",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setRecordingSettings"
        },
        "openStream": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "javax.management.openmbean.TabularData",
              "desc": "p1"
            }
          ],
          "ret": "long",
          "desc": "openStream"
        },
        "cloneRecording": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "boolean",
              "desc": "p1"
            }
          ],
          "ret": "long",
          "desc": "cloneRecording"
        },
        "setRecordingOptions": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "javax.management.openmbean.TabularData",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setRecordingOptions"
        },
        "copyTo": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "copyTo"
        },
        "startRecording": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "void",
          "desc": "startRecording"
        },
        "getRecordingSettings": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "getRecordingSettings"
        },
        "setPredefinedConfiguration": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setPredefinedConfiguration"
        },
        "closeStream": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "void",
          "desc": "closeStream"
        },
        "readStream": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "[B",
          "desc": "readStream"
        },
        "setConfiguration": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setConfiguration"
        },
        "stopRecording": {
          "args": [
            {
              "name": "p0",
              "type": "long",
              "desc": "p0"
            }
          ],
          "ret": "boolean",
          "desc": "stopRecording"
        }
      },
      "notif": {
        "javax.management.AttributeChangeNotification": {
          "types": ["jmx.attribute.change"],
          "name": "javax.management.AttributeChangeNotification",
          "desc": "Notifies if the RecordingState has changed for one of the recordings, for example if a recording starts or stops"
        }
      },
      "attr": {
        "EventTypes": {
          "rw": false,
          "type": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "EventTypes"
        },
        "Recordings": {
          "rw": false,
          "type": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "Recordings"
        },
        "Configurations": {
          "rw": false,
          "type": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "Configurations"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "jdk.management.jfr.FlightRecorderMXBeanImpl",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "java.lang": {
    "name\u003dPS Scavenge,type\u003dGarbageCollector": {
      "notif": {
        "javax.management.Notification": {
          "types": ["com.sun.management.gc.notification"],
          "name": "javax.management.Notification",
          "desc": "GC Notification"
        }
      },
      "attr": {
        "MemoryPoolNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryPoolNames"
        },
        "LastGcInfo": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "LastGcInfo"
        },
        "CollectionTime": {
          "rw": false,
          "type": "long",
          "desc": "CollectionTime"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionCount"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "com.sun.management.internal.GarbageCollectorExtImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dThreading": {
      "op": {
        "getThreadCpuTime": [
          {
            "args": ["{name\u003dp0, type\u003d[J, desc\u003dp0}"],
            "ret": "[J",
            "desc": "getThreadCpuTime"
          },
          {
            "args": ["{name\u003dp0, type\u003dlong, desc\u003dp0}"],
            "ret": "long",
            "desc": "getThreadCpuTime"
          }
        ],
        "findDeadlockedThreads": {
          "args": [],
          "ret": "[J",
          "desc": "findDeadlockedThreads"
        },
        "getThreadInfo": [
          {
            "args": [
              "{name\u003dp0, type\u003d[J, desc\u003dp0}",
              "{name\u003dp1, type\u003dboolean, desc\u003dp1}",
              "{name\u003dp2, type\u003dboolean, desc\u003dp2}",
              "{name\u003dp3, type\u003dint, desc\u003dp3}"
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "getThreadInfo"
          },
          {
            "args": ["{name\u003dp0, type\u003d[J, desc\u003dp0}", "{name\u003dp1, type\u003dint, desc\u003dp1}"],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "getThreadInfo"
          },
          {
            "args": ["{name\u003dp0, type\u003d[J, desc\u003dp0}"],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "getThreadInfo"
          },
          {
            "args": [
              "{name\u003dp0, type\u003d[J, desc\u003dp0}",
              "{name\u003dp1, type\u003dboolean, desc\u003dp1}",
              "{name\u003dp2, type\u003dboolean, desc\u003dp2}"
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "getThreadInfo"
          },
          {
            "args": ["{name\u003dp0, type\u003dlong, desc\u003dp0}"],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getThreadInfo"
          },
          {
            "args": ["{name\u003dp0, type\u003dlong, desc\u003dp0}", "{name\u003dp1, type\u003dint, desc\u003dp1}"],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getThreadInfo"
          }
        ],
        "getThreadAllocatedBytes": [
          {
            "args": ["{name\u003dp0, type\u003dlong, desc\u003dp0}"],
            "ret": "long",
            "desc": "getThreadAllocatedBytes"
          },
          {
            "args": ["{name\u003dp0, type\u003d[J, desc\u003dp0}"],
            "ret": "[J",
            "desc": "getThreadAllocatedBytes"
          }
        ],
        "getThreadUserTime": [
          {
            "args": ["{name\u003dp0, type\u003d[J, desc\u003dp0}"],
            "ret": "[J",
            "desc": "getThreadUserTime"
          },
          {
            "args": ["{name\u003dp0, type\u003dlong, desc\u003dp0}"],
            "ret": "long",
            "desc": "getThreadUserTime"
          }
        ],
        "findMonitorDeadlockedThreads": {
          "args": [],
          "ret": "[J",
          "desc": "findMonitorDeadlockedThreads"
        },
        "resetPeakThreadCount": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakThreadCount"
        },
        "dumpAllThreads": [
          {
            "args": [
              "{name\u003dp0, type\u003dboolean, desc\u003dp0}",
              "{name\u003dp1, type\u003dboolean, desc\u003dp1}"
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "dumpAllThreads"
          },
          {
            "args": [
              "{name\u003dp0, type\u003dboolean, desc\u003dp0}",
              "{name\u003dp1, type\u003dboolean, desc\u003dp1}",
              "{name\u003dp2, type\u003dint, desc\u003dp2}"
            ],
            "ret": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "dumpAllThreads"
          }
        ]
      },
      "attr": {
        "ThreadAllocatedMemorySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "ThreadAllocatedMemorySupported"
        },
        "ThreadContentionMonitoringEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "ThreadContentionMonitoringEnabled"
        },
        "CurrentThreadAllocatedBytes": {
          "rw": false,
          "type": "long",
          "desc": "CurrentThreadAllocatedBytes"
        },
        "TotalStartedThreadCount": {
          "rw": false,
          "type": "long",
          "desc": "TotalStartedThreadCount"
        },
        "CurrentThreadCpuTimeSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CurrentThreadCpuTimeSupported"
        },
        "CurrentThreadUserTime": {
          "rw": false,
          "type": "long",
          "desc": "CurrentThreadUserTime"
        },
        "PeakThreadCount": {
          "rw": false,
          "type": "int",
          "desc": "PeakThreadCount"
        },
        "AllThreadIds": {
          "rw": false,
          "type": "[J",
          "desc": "AllThreadIds"
        },
        "ThreadAllocatedMemoryEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "ThreadAllocatedMemoryEnabled"
        },
        "TotalThreadAllocatedBytes": {
          "rw": false,
          "type": "long",
          "desc": "TotalThreadAllocatedBytes"
        },
        "CurrentThreadCpuTime": {
          "rw": false,
          "type": "long",
          "desc": "CurrentThreadCpuTime"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "ThreadContentionMonitoringSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "ThreadContentionMonitoringSupported"
        },
        "ThreadCpuTimeSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "ThreadCpuTimeSupported"
        },
        "ThreadCount": {
          "rw": false,
          "type": "int",
          "desc": "ThreadCount"
        },
        "ThreadCpuTimeEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "ThreadCpuTimeEnabled"
        },
        "ObjectMonitorUsageSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "ObjectMonitorUsageSupported"
        },
        "SynchronizerUsageSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "SynchronizerUsageSupported"
        },
        "DaemonThreadCount": {
          "rw": false,
          "type": "int",
          "desc": "DaemonThreadCount"
        }
      },
      "class": "com.sun.management.internal.HotSpotThreadImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dPS Old Gen,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dMemory": {
      "op": {
        "gc": {
          "args": [],
          "ret": "void",
          "desc": "gc"
        }
      },
      "notif": {
        "javax.management.Notification": {
          "types": [
            "java.management.memory.threshold.exceeded",
            "java.management.memory.collection.threshold.exceeded"
          ],
          "name": "javax.management.Notification",
          "desc": "Memory Notification"
        }
      },
      "attr": {
        "ObjectPendingFinalizationCount": {
          "rw": false,
          "type": "int",
          "desc": "ObjectPendingFinalizationCount"
        },
        "Verbose": {
          "rw": true,
          "type": "boolean",
          "desc": "Verbose"
        },
        "HeapMemoryUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "HeapMemoryUsage"
        },
        "NonHeapMemoryUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "NonHeapMemoryUsage"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.MemoryImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dMetaspace,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dPS Survivor Space,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dOperatingSystem": {
      "attr": {
        "OpenFileDescriptorCount": {
          "rw": false,
          "type": "long",
          "desc": "OpenFileDescriptorCount"
        },
        "CommittedVirtualMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "CommittedVirtualMemorySize"
        },
        "FreePhysicalMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "FreePhysicalMemorySize"
        },
        "SystemLoadAverage": {
          "rw": false,
          "type": "double",
          "desc": "SystemLoadAverage"
        },
        "Arch": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Arch"
        },
        "ProcessCpuLoad": {
          "rw": false,
          "type": "double",
          "desc": "ProcessCpuLoad"
        },
        "FreeSwapSpaceSize": {
          "rw": false,
          "type": "long",
          "desc": "FreeSwapSpaceSize"
        },
        "TotalPhysicalMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "TotalPhysicalMemorySize"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "TotalSwapSpaceSize": {
          "rw": false,
          "type": "long",
          "desc": "TotalSwapSpaceSize"
        },
        "TotalMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "TotalMemorySize"
        },
        "ProcessCpuTime": {
          "rw": false,
          "type": "long",
          "desc": "ProcessCpuTime"
        },
        "MaxFileDescriptorCount": {
          "rw": false,
          "type": "long",
          "desc": "MaxFileDescriptorCount"
        },
        "SystemCpuLoad": {
          "rw": false,
          "type": "double",
          "desc": "SystemCpuLoad"
        },
        "Version": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Version"
        },
        "AvailableProcessors": {
          "rw": false,
          "type": "int",
          "desc": "AvailableProcessors"
        },
        "CpuLoad": {
          "rw": false,
          "type": "double",
          "desc": "CpuLoad"
        },
        "FreeMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "FreeMemorySize"
        }
      },
      "class": "com.sun.management.internal.OperatingSystemImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dPS Eden Space,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dCodeCacheManager,type\u003dMemoryManager": {
      "attr": {
        "MemoryPoolNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryPoolNames"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.MemoryManagerImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dCodeHeap \u0027non-nmethods\u0027,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dCompressed Class Space,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dCodeHeap \u0027non-profiled nmethods\u0027,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dClassLoading": {
      "attr": {
        "LoadedClassCount": {
          "rw": false,
          "type": "int",
          "desc": "LoadedClassCount"
        },
        "UnloadedClassCount": {
          "rw": false,
          "type": "long",
          "desc": "UnloadedClassCount"
        },
        "Verbose": {
          "rw": true,
          "type": "boolean",
          "desc": "Verbose"
        },
        "TotalLoadedClassCount": {
          "rw": false,
          "type": "long",
          "desc": "TotalLoadedClassCount"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.ClassLoadingImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dCodeHeap \u0027profiled nmethods\u0027,type\u003dMemoryPool": {
      "op": {
        "resetPeakUsage": {
          "args": [],
          "ret": "void",
          "desc": "resetPeakUsage"
        }
      },
      "attr": {
        "Usage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "Usage"
        },
        "UsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "UsageThresholdCount"
        },
        "MemoryManagerNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryManagerNames"
        },
        "UsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdSupported"
        },
        "UsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "UsageThreshold"
        },
        "CollectionUsageThresholdCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionUsageThresholdCount"
        },
        "PeakUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "PeakUsage"
        },
        "UsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "UsageThresholdExceeded"
        },
        "CollectionUsageThreshold": {
          "rw": true,
          "type": "long",
          "desc": "CollectionUsageThreshold"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "Type": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Type"
        },
        "CollectionUsageThresholdSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdSupported"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionUsage": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "CollectionUsage"
        },
        "CollectionUsageThresholdExceeded": {
          "rw": false,
          "type": "boolean",
          "desc": "CollectionUsageThresholdExceeded"
        }
      },
      "class": "sun.management.MemoryPoolImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dCompilation": {
      "attr": {
        "CompilationTimeMonitoringSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CompilationTimeMonitoringSupported"
        },
        "TotalCompilationTime": {
          "rw": false,
          "type": "long",
          "desc": "TotalCompilationTime"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.CompilationImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dPS MarkSweep,type\u003dGarbageCollector": {
      "notif": {
        "javax.management.Notification": {
          "types": ["com.sun.management.gc.notification"],
          "name": "javax.management.Notification",
          "desc": "GC Notification"
        }
      },
      "attr": {
        "MemoryPoolNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryPoolNames"
        },
        "LastGcInfo": {
          "rw": false,
          "type": "javax.management.openmbean.CompositeData",
          "desc": "LastGcInfo"
        },
        "CollectionTime": {
          "rw": false,
          "type": "long",
          "desc": "CollectionTime"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "CollectionCount": {
          "rw": false,
          "type": "long",
          "desc": "CollectionCount"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "com.sun.management.internal.GarbageCollectorExtImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dMetaspace Manager,type\u003dMemoryManager": {
      "attr": {
        "MemoryPoolNames": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "MemoryPoolNames"
        },
        "Valid": {
          "rw": false,
          "type": "boolean",
          "desc": "Valid"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.MemoryManagerImpl",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dRuntime": {
      "attr": {
        "SpecVendor": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "SpecVendor"
        },
        "ClassPath": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ClassPath"
        },
        "InputArguments": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "InputArguments"
        },
        "Uptime": {
          "rw": false,
          "type": "long",
          "desc": "Uptime"
        },
        "VmName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "VmName"
        },
        "StartTime": {
          "rw": false,
          "type": "long",
          "desc": "StartTime"
        },
        "VmVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "VmVersion"
        },
        "SpecName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "SpecName"
        },
        "Pid": {
          "rw": false,
          "type": "long",
          "desc": "Pid"
        },
        "ManagementSpecVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ManagementSpecVersion"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        },
        "VmVendor": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "VmVendor"
        },
        "LibraryPath": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "LibraryPath"
        },
        "BootClassPath": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "BootClassPath"
        },
        "SpecVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "SpecVersion"
        },
        "SystemProperties": {
          "rw": false,
          "type": "javax.management.openmbean.TabularData",
          "desc": "SystemProperties"
        },
        "BootClassPathSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "BootClassPathSupported"
        }
      },
      "class": "sun.management.RuntimeImpl",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "org.apache.camel": {
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultExchangeFactoryManager": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Reset statistics"
        },
        "getStatisticsEnabled": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "StatisticsEnabled"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "purge": {
          "args": [],
          "ret": "void",
          "desc": "Purges the pool"
        },
        "listStatistics": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Lists all the statistics in tabular form"
        },
        "getTotalCreated": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "TotalCreated"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getConsumerCounter": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "ConsumerCounter"
        },
        "getTotalPooled": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "TotalPooled"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "getTotalDiscarded": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "TotalDiscarded"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getTotalAcquired": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "TotalAcquired"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.Boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getTotalReleased": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "TotalReleased"
        },
        "getCapacity": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Capacity"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "java.lang.Boolean",
          "desc": "Whether statistics is enabled"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "TotalCreated": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Total number of new exchanges created"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "TotalDiscarded": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Total number of exchanges discarded (such as when capacity is full)"
        },
        "TotalAcquired": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Total number of exchanges reused (if pooling is in use)"
        },
        "TotalPooled": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Total number of currently pooled exchanges (if pooling is in use)"
        },
        "Capacity": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Max capacity per consumer for exchange pooling"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "ConsumerCounter": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Number of consumers managed"
        },
        "TotalReleased": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Total number of exchanges released back to the pool"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedExchangeFactoryManager",
      "desc": "Managed ExchangeFactory"
    },
    "context\u003dMyCamel,type\u003dcontext,name\u003d\"MyCamel\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "dumpStepStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the CamelContext and routes and steps stats as XML"
        },
        "getCamelVersion": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelVersion"
        },
        "dumpRestsAsXml": [
          {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the rests as XML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the rests as XML"
          }
        ],
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "getClassResolver": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ClassResolver"
        },
        "isLogMask": {
          "args": [],
          "ret": "boolean",
          "desc": "LogMask"
        },
        "isUseMDCLogging": {
          "args": [],
          "ret": "boolean",
          "desc": "UseMDCLogging"
        },
        "requestBodyAndHeaders": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.Object",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "java.lang.Object",
          "desc": "Request body and headers (in out)"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "isShutdownNowOnTimeout": {
          "args": [],
          "ret": "boolean",
          "desc": "ShutdownNowOnTimeout"
        },
        "isUseBreadcrumb": {
          "args": [],
          "ret": "boolean",
          "desc": "UseBreadcrumb"
        },
        "sendBodyAndHeaders": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.Object",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Send body and headers (in only)"
        },
        "sendBody": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.Object",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Send body (in only)"
        },
        "dumpRoutesAsXml": [
          {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as XML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}", "{name\u003dp2, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as XML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as XML"
          }
        ],
        "setTracing": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.Boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Tracing"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Camel"
        },
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "canSendToEndpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Whether its possible to send to the endpoint (eg the endpoint has a producer)"
        },
        "getTracing": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "Tracing"
        },
        "setShutdownNowOnTimeout": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "ShutdownNowOnTimeout"
        },
        "removeEndpoints": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "int",
          "desc": "Removes endpoints by the given pattern"
        },
        "dumpRoutesAsYaml": [
          {
            "args": [
              "{name\u003dp1, type\u003dboolean, desc\u003d}",
              "{name\u003dp2, type\u003dboolean, desc\u003d}",
              "{name\u003dp3, type\u003dboolean, desc\u003d}"
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as YAML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}", "{name\u003dp2, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as YAML"
          },
          {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as YAML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the routes as YAML"
          }
        ],
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "languageNames": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "The names of the languages currently registered"
        },
        "startAllRoutes": {
          "args": [],
          "ret": "void",
          "desc": "Starts all the routes which currently is not started"
        },
        "setGlobalOption": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Sets the value of a Camel global option"
        },
        "getLoad15": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load15"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "setTimeUnit": {
          "args": [
            {
              "name": "p1",
              "type": "java.util.concurrent.TimeUnit",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "TimeUnit"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Camel (shutdown)"
        },
        "getGlobalOptions": {
          "args": [],
          "ret": "java.util.Map",
          "desc": "GlobalOptions"
        },
        "reset": [
          {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "void",
            "desc": "Reset counters"
          }
        ],
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getUptime": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Uptime"
        },
        "getManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ManagementName"
        },
        "getHeadersMapFactoryClassName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "HeadersMapFactoryClassName"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "dataFormatNames": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "The names of the data formats currently registered"
        },
        "getCamelDescription": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelDescription"
        },
        "dumpRoutesStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the CamelContext and routes stats as XML"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "dumpRoutesCoverageAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the routes coverage as XML"
        },
        "requestStringBody": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.Object",
          "desc": "Request body (String type) (in out)"
        },
        "getLoad05": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load05"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getThroughput": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Throughput"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "isUseDataType": {
          "args": [],
          "ret": "boolean",
          "desc": "UseDataType"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "requestBody": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.Object",
              "desc": ""
            }
          ],
          "ret": "java.lang.Object",
          "desc": "Request body (in out)"
        },
        "isMessageHistory": {
          "args": [],
          "ret": "boolean",
          "desc": "MessageHistory"
        },
        "getPackageScanClassResolver": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "PackageScanClassResolver"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "getTimeout": {
          "args": [],
          "ret": "long",
          "desc": "Timeout"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "isAllowUseOriginalMessage": {
          "args": [],
          "ret": "boolean",
          "desc": "AllowUseOriginalMessage"
        },
        "getUptimeMillis": {
          "args": [],
          "ret": "long",
          "desc": "UptimeMillis"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Camel"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "getApplicationContextClassName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ApplicationContextClassName"
        },
        "restart": {
          "args": [],
          "ret": "void",
          "desc": "Restart Camel (stop and then start)"
        },
        "dumpRouteTemplatesAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the route templates as XML"
        },
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Camel"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getStartedRoutes": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "StartedRoutes"
        },
        "getTimeUnit": {
          "args": [],
          "ret": "java.util.concurrent.TimeUnit",
          "desc": "TimeUnit"
        },
        "getLoad01": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load01"
        },
        "setTimeout": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Timeout"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "createEndpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Creates the endpoint by the given URI"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "getManagementStatisticsLevel": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ManagementStatisticsLevel"
        },
        "getGlobalOption": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Gets the value of a Camel global option"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "getTotalRoutes": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "TotalRoutes"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "componentNames": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "The names of the components currently registered"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        },
        "sendStringBody": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Send body (String type) (in only)"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "UseMDCLogging": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether MDC logging is supported"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "CamelDescription": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel Description"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "TotalRoutes": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Total number of routes"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "UseBreadcrumb": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether breadcrumbs is in use"
        },
        "UptimeMillis": {
          "rw": false,
          "type": "long",
          "desc": "Uptime [milliseconds]"
        },
        "TimeUnit": {
          "rw": true,
          "type": "java.util.concurrent.TimeUnit",
          "desc": "Shutdown timeout time unit"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "LogMask": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether security mask for Logging is enabled"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "Timeout": {
          "rw": true,
          "type": "long",
          "desc": "Shutdown timeout"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "AllowUseOriginalMessage": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether allowing access to the original message during routing"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "MessageHistory": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether message history is enabled"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel State"
        },
        "Tracing": {
          "rw": true,
          "type": "java.lang.Boolean",
          "desc": "Tracing"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "HeadersMapFactoryClassName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "HeadersMapFactory class name"
        },
        "Throughput": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Throughput message/second"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "Load15": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last fifteen minutes"
        },
        "ApplicationContextClassName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ApplicationContext class name"
        },
        "StartedRoutes": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Current number of started routes"
        },
        "ManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "ClassResolver": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ClassResolver class name"
        },
        "GlobalOptions": {
          "rw": false,
          "type": "java.util.Map",
          "desc": "Camel Global Options"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "UseDataType": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether Message DataType is enabled"
        },
        "Uptime": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Uptime [human readable text]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "ShutdownNowOnTimeout": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to force shutdown now when a timeout occurred"
        },
        "Load05": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last five minutes"
        },
        "PackageScanClassResolver": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "PackageScanClassResolver class name"
        },
        "CamelVersion": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel Version"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "ManagementStatisticsLevel": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel Management StatisticsLevel"
        },
        "Load01": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last minute"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedCamelContext",
      "desc": "Managed CamelContext"
    },
    "context\u003dMyCamel,type\u003dprocessors,name\u003d\"filter1\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getProcessorName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorName"
        },
        "getPredicateLanguage": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "PredicateLanguage"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "getIndex": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Index"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "getSourceLocation": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocation"
        },
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "getNodePrefixId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePrefixId"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "getPredicate": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Predicate"
        },
        "getFilteredCount": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "FilteredCount"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "getSourceLineNumber": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "SourceLineNumber"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getStepId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "StepId"
        },
        "getSupportExtendedInformation": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "SupportExtendedInformation"
        },
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "getProcessorId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorId"
        },
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Processor"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getLevel": {
          "args": [],
          "ret": "int",
          "desc": "Level"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Processor"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "reset": {
          "args": [],
          "ret": "void",
          "desc": "Reset counters"
        },
        "dumpProcessorAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the processor as XML"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        }
      },
      "attr": {
        "SourceLocation": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Source file Location"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "PredicateLanguage": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The language for the predicate"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "NodePrefixId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Node Prefix ID"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "Index": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Processor Index"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "Predicate": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Predicate to determine if the message should be filtered or not"
        },
        "FilteredCount": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Gets the number of Exchanges that matched the filter predicate and therefore as filtered"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "StepId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Step ID"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "ProcessorName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor Name (Short)"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "ProcessorId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor ID"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "SupportExtendedInformation": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Whether this processor supports extended JMX information"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor State"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "Level": {
          "rw": false,
          "type": "int",
          "desc": "Processor Level in the route tree"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "SourceLineNumber": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedFilter",
      "desc": "Managed Filter"
    },
    "context\u003dMyCamel,type\u003dcomponents,name\u003d\"spring-event\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isHealthCheckSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckSupported"
        },
        "getComponentName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ComponentName"
        },
        "isHealthCheckConsumerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckConsumerEnabled"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isVerifySupported": {
          "args": [],
          "ret": "boolean",
          "desc": "VerifySupported"
        },
        "verify": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
          "desc": "Verify options against a given scope"
        },
        "isHealthCheckProducerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckProducerEnabled"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "VerifySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component support verification (parameters or connectivity)"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "HealthCheckProducerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether producer based health checks from this component is enabled (default disabled)"
        },
        "ComponentName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component Name"
        },
        "HealthCheckConsumerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether consumer based health checks from this component is enabled (default enabled)"
        },
        "HealthCheckSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component provides component specific health checks"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedComponent",
      "desc": "Managed Component"
    },
    "context\u003dMyCamel,type\u003dproducers,name\u003dStreamProducer(0x1939a394)": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "isSingleton": {
          "args": [],
          "ret": "boolean",
          "desc": "Singleton"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Singleton": {
          "rw": false,
          "type": "boolean",
          "desc": "Singleton"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedProducer",
      "desc": "Managed Producer"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dGlobalVariableRepository": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "variables": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "List all variables"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "clear": {
          "args": [],
          "ret": "void",
          "desc": "Removes all variables"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Id"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getSize": {
          "args": [],
          "ret": "int",
          "desc": "Size"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "names": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "Variable names"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Size": {
          "rw": false,
          "type": "int",
          "desc": "Number of variables"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Id": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Repository ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedVariableRepository",
      "desc": "Managed VariableRepository"
    },
    "context\u003dMyCamel,type\u003dendpoints,name\u003d\"log://foo\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getEndpointBaseUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointBaseUri"
        },
        "isSingleton": {
          "args": [],
          "ret": "boolean",
          "desc": "Singleton"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "EndpointBaseUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint Base URI (no query parameters)"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint State"
        },
        "Singleton": {
          "rw": false,
          "type": "boolean",
          "desc": "Singleton"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedEndpoint",
      "desc": "Managed Endpoint"
    },
    "context\u003dMyCamel,type\u003dprocessors,name\u003d\"to2\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "getIndex": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Index"
        },
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "getSourceLineNumber": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "SourceLineNumber"
        },
        "getStepId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "StepId"
        },
        "getSupportExtendedInformation": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "SupportExtendedInformation"
        },
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "getVariableSend": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "VariableSend"
        },
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Processor"
        },
        "reset": {
          "args": [],
          "ret": "void",
          "desc": "Reset counters"
        },
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getProcessorName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorName"
        },
        "getDestination": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Destination"
        },
        "getMessageExchangePattern": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "MessageExchangePattern"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "getSourceLocation": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocation"
        },
        "getNodePrefixId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePrefixId"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "extendedInformation": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Statistics of the endpoint which has been sent to"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getProcessorId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorId"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "getVariableReceive": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "VariableReceive"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Processor"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getLevel": {
          "args": [],
          "ret": "int",
          "desc": "Level"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "dumpProcessorAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the processor as XML"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        }
      },
      "attr": {
        "SourceLocation": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Source file Location"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "Destination": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination as Endpoint URI"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "NodePrefixId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Node Prefix ID"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "Index": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Processor Index"
        },
        "VariableReceive": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Variable to store the received message body (only body, not headers)"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "StepId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Step ID"
        },
        "MessageExchangePattern": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Message Exchange Pattern"
        },
        "VariableSend": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Variable as the source for the message body to send"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "ProcessorName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor Name (Short)"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "ProcessorId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor ID"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "SupportExtendedInformation": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Whether this processor supports extended JMX information"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor State"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "Level": {
          "rw": false,
          "type": "int",
          "desc": "Processor Level in the route tree"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "SourceLineNumber": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedSendProcessor",
      "desc": "Managed SendProcessor"
    },
    "context\u003dMyCamel,type\u003dendpoints,name\u003d\"timer://hello\\?period\u003d2000\"": {
      "op": {
        "isFixedRate": {
          "args": [],
          "ret": "boolean",
          "desc": "FixedRate"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "getDelay": {
          "args": [],
          "ret": "long",
          "desc": "Delay"
        },
        "setTimerName": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "TimerName"
        },
        "isIncludeMetadata": {
          "args": [],
          "ret": "boolean",
          "desc": "IncludeMetadata"
        },
        "isSingleton": {
          "args": [],
          "ret": "boolean",
          "desc": "Singleton"
        },
        "setIncludeMetadata": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "IncludeMetadata"
        },
        "setPeriod": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Period"
        },
        "isMultipleConsumersSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "MultipleConsumersSupported"
        },
        "getPeriod": {
          "args": [],
          "ret": "long",
          "desc": "Period"
        },
        "getTimerName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "TimerName"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "setRunLoggingLevel": {
          "args": [
            {
              "name": "p1",
              "type": "org.apache.camel.LoggingLevel",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "RunLoggingLevel"
        },
        "setDaemon": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Daemon"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getEndpointBaseUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointBaseUri"
        },
        "setRepeatCount": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "RepeatCount"
        },
        "isDaemon": {
          "args": [],
          "ret": "boolean",
          "desc": "Daemon"
        },
        "setFixedRate": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "FixedRate"
        },
        "setDelay": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Delay"
        },
        "getRunLoggingLevel": {
          "args": [],
          "ret": "org.apache.camel.LoggingLevel",
          "desc": "RunLoggingLevel"
        },
        "getRepeatCount": {
          "args": [],
          "ret": "long",
          "desc": "RepeatCount"
        }
      },
      "attr": {
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "MultipleConsumersSupported": {
          "rw": false,
          "type": "boolean",
          "desc": ""
        },
        "RepeatCount": {
          "rw": true,
          "type": "long",
          "desc": "Repeat Count"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "RunLoggingLevel": {
          "rw": true,
          "type": "org.apache.camel.LoggingLevel",
          "desc": "The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that."
        },
        "Period": {
          "rw": true,
          "type": "long",
          "desc": "Timer Period"
        },
        "FixedRate": {
          "rw": true,
          "type": "boolean",
          "desc": "Timer FixedRate"
        },
        "TimerName": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "Timer Name"
        },
        "Delay": {
          "rw": true,
          "type": "long",
          "desc": "Timer Delay"
        },
        "IncludeMetadata": {
          "rw": true,
          "type": "boolean",
          "desc": "Include metadata"
        },
        "EndpointBaseUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint Base URI (no query parameters)"
        },
        "Daemon": {
          "rw": true,
          "type": "boolean",
          "desc": "Timer Daemon"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint State"
        },
        "Singleton": {
          "rw": false,
          "type": "boolean",
          "desc": "Singleton"
        }
      },
      "class": "org.apache.camel.component.timer.TimerEndpoint",
      "desc": "Managed TimerEndpoint"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dJmxManagementStrategy": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getManagedCount": {
          "args": [],
          "ret": "int",
          "desc": "ManagedCount"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "ManagedCount": {
          "rw": false,
          "type": "int",
          "desc": "Number of managed MBean instances"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.JmxManagementStrategy",
      "desc": "Managed JmxManagementStrategy"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultHealthCheckRegistry": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedService",
      "desc": "Managed Service"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultShutdownStrategy": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedService",
      "desc": "Managed Service"
    },
    "context\u003dMyCamel,type\u003droutes,name\u003d\"hello\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "dumpStepStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the route and steps stats as XML"
        },
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "getOldestInflightExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "OldestInflightExchangeId"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "dumpRouteAsXml": [
          {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the route as XML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}", "{name\u003dp2, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the route as XML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the route as XML"
          }
        ],
        "setTracing": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.Boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Tracing"
        },
        "suspend": [
          {
            "args": [],
            "ret": "void",
            "desc": "Suspend route"
          },
          {
            "args": ["{name\u003dp1, type\u003dlong, desc\u003d}"],
            "ret": "void",
            "desc": "Suspend route (using timeout in seconds)"
          }
        ],
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "getTracing": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "Tracing"
        },
        "getLastError": {
          "args": [],
          "ret": "org.apache.camel.api.management.mbean.RouteError",
          "desc": "LastError"
        },
        "getHasRouteController": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "HasRouteController"
        },
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "getLoad15": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load15"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getLogMask": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "LogMask"
        },
        "dumpRouteAsYaml": [
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}", "{name\u003dp2, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the route as YAML"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the route as YAML"
          },
          {
            "args": [
              "{name\u003dp1, type\u003dboolean, desc\u003d}",
              "{name\u003dp2, type\u003dboolean, desc\u003d}",
              "{name\u003dp3, type\u003dboolean, desc\u003d}"
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the route as YAML"
          },
          {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the route as YAML"
          }
        ],
        "stop": [
          {
            "args": ["{name\u003dp1, type\u003dlong, desc\u003d}"],
            "ret": "void",
            "desc": "Stop route (using timeout in seconds)"
          },
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.Long, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.Boolean, desc\u003d}"
            ],
            "ret": "boolean",
            "desc": "Stop route, abort stop after timeout (in seconds)"
          },
          {
            "args": [],
            "ret": "void",
            "desc": "Stop route"
          }
        ],
        "getRouteConfigurationId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteConfigurationId"
        },
        "reset": [
          {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          {
            "args": ["{name\u003dp1, type\u003dboolean, desc\u003d}"],
            "ret": "void",
            "desc": "Reset counters"
          }
        ],
        "dumpRouteSourceLocationsAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the route with mappings between node ids and their source location/line-number (currently only XML and YAML routes supported) as XML"
        },
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getOldestInflightDuration": {
          "args": [],
          "ret": "java.lang.Long",
          "desc": "OldestInflightDuration"
        },
        "getUptime": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Uptime"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "getRoutePolicyList": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RoutePolicyList"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "getSourceLocation": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocation"
        },
        "getNodePrefixId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePrefixId"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "stopAndFail": {
          "args": [],
          "ret": "void",
          "desc": "Stop and marks the route as failed (health-check reporting as DOWN)"
        },
        "getDescription": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Description"
        },
        "getLoad05": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load05"
        },
        "remove": {
          "args": [],
          "ret": "boolean",
          "desc": "Remove route (must be stopped)"
        },
        "dumpRouteStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the route stats as XML"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getThroughput": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Throughput"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "isUpdateRouteEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "UpdateRouteEnabled"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getRouteProperties": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "RouteProperties"
        },
        "getUptimeMillis": {
          "args": [],
          "ret": "long",
          "desc": "UptimeMillis"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Route"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "restart": [
          {
            "args": ["{name\u003dp1, type\u003dlong, desc\u003d}"],
            "ret": "void",
            "desc": "Restarts route (using delay in seconds before starting)"
          },
          {
            "args": [],
            "ret": "void",
            "desc": "Restarts route (1 second delay before starting)"
          }
        ],
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start route"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getMessageHistory": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "MessageHistory"
        },
        "getSourceLocationShort": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocationShort"
        },
        "getLoad01": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Load01"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "processorIds": {
          "args": [],
          "ret": "java.util.Collection",
          "desc": "IDs for the processors that are part of this route"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "getRouteGroup": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteGroup"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        },
        "updateRouteFromXml": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Updates the route from XML"
        }
      },
      "attr": {
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "SourceLocationShort": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Source Location (Short)"
        },
        "NodePrefixId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Node Prefix ID"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "RouteProperties": {
          "rw": false,
          "type": "javax.management.openmbean.TabularData",
          "desc": "Route Properties"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "UpdateRouteEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether update route from XML is enabled"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "UptimeMillis": {
          "rw": false,
          "type": "long",
          "desc": "Route Uptime [milliseconds]"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "HasRouteController": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Is using route controller"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "LogMask": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Whether security mask for Logging is enabled"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "RoutePolicyList": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Policy List"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "RouteGroup": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Group"
        },
        "MessageHistory": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Message History"
        },
        "OldestInflightExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Oldest inflight exchange id"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route State"
        },
        "Tracing": {
          "rw": true,
          "type": "java.lang.Boolean",
          "desc": "Tracing"
        },
        "SourceLocation": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Source Location"
        },
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Endpoint URI"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "Description": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Description"
        },
        "Throughput": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Throughput message/second"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "Load15": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last fifteen minutes"
        },
        "OldestInflightDuration": {
          "rw": false,
          "type": "java.lang.Long",
          "desc": "Oldest inflight exchange duration"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "Uptime": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Uptime [human readable text]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "RouteConfigurationId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route Configuration ID"
        },
        "LastError": {
          "rw": false,
          "type": "org.apache.camel.api.management.mbean.RouteError",
          "desc": "Last error"
        },
        "Load05": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last five minutes"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "Load01": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Average load over the last minute"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedSuspendableRoute",
      "desc": "Managed Suspendable Route"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultEndpointRegistry": {
      "op": {
        "getDynamicSize": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "DynamicSize"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getStaticSize": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "StaticSize"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "purge": {
          "args": [],
          "ret": "void",
          "desc": "Purges the cache"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getSize": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Size"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "getMaximumCacheSize": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "MaximumCacheSize"
        },
        "listEndpoints": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Lists all the endpoints in the registry (url)"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getSource": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Source"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "Size": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Number of total endpoints cached"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "Source": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Source"
        },
        "StaticSize": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Number of static endpoints cached"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "MaximumCacheSize": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Maximum cache size (capacity)"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "DynamicSize": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Number of dynamic endpoints cached"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedEndpointRegistry",
      "desc": "Managed EndpointRegistry"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dJmxConnectorService(0x7e691624)": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedService",
      "desc": "Managed Service"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultAsyncProcessorAwaitManager": {
      "op": {
        "getMeanDuration": {
          "args": [],
          "ret": "long",
          "desc": "MeanDuration"
        },
        "getMinDuration": {
          "args": [],
          "ret": "long",
          "desc": "MinDuration"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "setInterruptThreadsWhileStopping": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "InterruptThreadsWhileStopping"
        },
        "interrupt": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "To interrupt an exchange which may seem as stuck, to force the exchange to continue, allowing any blocking thread to be released."
        },
        "getThreadsInterrupted": {
          "args": [],
          "ret": "long",
          "desc": "ThreadsInterrupted"
        },
        "isInterruptThreadsWhileStopping": {
          "args": [],
          "ret": "boolean",
          "desc": "InterruptThreadsWhileStopping"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getMaxDuration": {
          "args": [],
          "ret": "long",
          "desc": "MaxDuration"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Resets the statistics"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getSize": {
          "args": [],
          "ret": "int",
          "desc": "Size"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "getTotalDuration": {
          "args": [],
          "ret": "long",
          "desc": "TotalDuration"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getThreadsBlocked": {
          "args": [],
          "ret": "long",
          "desc": "ThreadsBlocked"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "browse": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Lists all the exchanges which are currently inflight, having a blocked thread awaiting for other threads to trigger the callback when they are done"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Utilization statistics enabled"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "Size": {
          "rw": false,
          "type": "int",
          "desc": "Number of threads that are blocked waiting for other threads to trigger the callback when they are done processing the exchange"
        },
        "ThreadsInterrupted": {
          "rw": false,
          "type": "long",
          "desc": "Number of threads that has been interrupted"
        },
        "MaxDuration": {
          "rw": false,
          "type": "long",
          "desc": "The maximum wait time in msec."
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "MinDuration": {
          "rw": false,
          "type": "long",
          "desc": "The minimum wait time in msec."
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "TotalDuration": {
          "rw": false,
          "type": "long",
          "desc": "Total wait time in msec."
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "MeanDuration": {
          "rw": false,
          "type": "long",
          "desc": "The average wait time in msec."
        },
        "InterruptThreadsWhileStopping": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to interrupt any blocking threads during stopping."
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "ThreadsBlocked": {
          "rw": false,
          "type": "long",
          "desc": "Number of threads that has been blocked"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedAsyncProcessorAwaitManager",
      "desc": "Managed AsyncProcessorAwaitManager"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultStreamCachingStrategy": {
      "op": {
        "setRemoveSpoolDirectoryWhenStopping": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "RemoveSpoolDirectoryWhenStopping"
        },
        "isRemoveSpoolDirectoryWhenStopping": {
          "args": [],
          "ret": "boolean",
          "desc": "RemoveSpoolDirectoryWhenStopping"
        },
        "getBufferSize": {
          "args": [],
          "ret": "int",
          "desc": "BufferSize"
        },
        "setSpoolUsedHeapMemoryLimit": {
          "args": [
            {
              "name": "p1",
              "type": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "SpoolUsedHeapMemoryLimit"
        },
        "getSpoolUsedHeapMemoryThreshold": {
          "args": [],
          "ret": "int",
          "desc": "SpoolUsedHeapMemoryThreshold"
        },
        "getCacheMemoryCounter": {
          "args": [],
          "ret": "long",
          "desc": "CacheMemoryCounter"
        },
        "getCacheSpoolCounter": {
          "args": [],
          "ret": "long",
          "desc": "CacheSpoolCounter"
        },
        "getDenyClasses": {
          "args": [],
          "ret": "[Ljava.lang.String;",
          "desc": "DenyClasses"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getCacheMemoryAverageSize": {
          "args": [],
          "ret": "long",
          "desc": "CacheMemoryAverageSize"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "setSpoolThreshold": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "SpoolThreshold"
        },
        "getSpoolDirectory": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SpoolDirectory"
        },
        "getSpoolThreshold": {
          "args": [],
          "ret": "long",
          "desc": "SpoolThreshold"
        },
        "setBufferSize": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "BufferSize"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "isAnySpoolRules": {
          "args": [],
          "ret": "boolean",
          "desc": "AnySpoolRules"
        },
        "getCacheSpoolSize": {
          "args": [],
          "ret": "long",
          "desc": "CacheSpoolSize"
        },
        "resetStatistics": {
          "args": [],
          "ret": "void",
          "desc": "Reset the utilization statistics"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getSpoolCipher": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SpoolCipher"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getCacheMemorySize": {
          "args": [],
          "ret": "long",
          "desc": "CacheMemorySize"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "getCacheSpoolAverageSize": {
          "args": [],
          "ret": "long",
          "desc": "CacheSpoolAverageSize"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "isEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "Enabled"
        },
        "setAnySpoolRules": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "AnySpoolRules"
        },
        "getAllowClasses": {
          "args": [],
          "ret": "[Ljava.lang.String;",
          "desc": "AllowClasses"
        },
        "getSpoolUsedHeapMemoryLimit": {
          "args": [],
          "ret": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
          "desc": "SpoolUsedHeapMemoryLimit"
        },
        "isSpoolEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "SpoolEnabled"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "setSpoolUsedHeapMemoryThreshold": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "SpoolUsedHeapMemoryThreshold"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether utilization statistics is enabled"
        },
        "SpoolDirectory": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Directory used when overflow and spooling to disk"
        },
        "SpoolThreshold": {
          "rw": true,
          "type": "long",
          "desc": "Threshold in bytes when overflow and spooling to disk instead of keeping in memory"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "CacheMemorySize": {
          "rw": false,
          "type": "long",
          "desc": "Total accumulated number of bytes which has been stream cached for in-memory StreamCache"
        },
        "CacheSpoolAverageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average number of bytes per cached stream for spooled (not in-memory) stream caches."
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "SpoolCipher": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Cipher used if writing with encryption"
        },
        "RemoveSpoolDirectoryWhenStopping": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to remove spool directory when stopping"
        },
        "SpoolEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether spooling to disk enabled"
        },
        "SpoolUsedHeapMemoryLimit": {
          "rw": true,
          "type": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
          "desc": "Whether used heap memory limit is committed or maximum"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "Enabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether stream caching is enabled"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "BufferSize": {
          "rw": true,
          "type": "int",
          "desc": "Buffer size in bytes to use when coping between buffers"
        },
        "DenyClasses": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "To filter stream caching of a given set of allowed/denied classes."
        },
        "SpoolUsedHeapMemoryThreshold": {
          "rw": true,
          "type": "int",
          "desc": "Percentage (1-99) of used heap memory threshold to activate spooling to disk"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CacheSpoolCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of spooled (not in-memory) StreamCache created"
        },
        "CacheMemoryAverageSize": {
          "rw": false,
          "type": "long",
          "desc": "Average number of bytes per cached stream for in-memory stream caches."
        },
        "AnySpoolRules": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether any or all spool rules determines whether to spool"
        },
        "AllowClasses": {
          "rw": false,
          "type": "[Ljava.lang.String;",
          "desc": "To filter stream caching of a given set of allowed/denied classes."
        },
        "CacheSpoolSize": {
          "rw": false,
          "type": "long",
          "desc": "Total accumulated number of bytes which has been stream cached for spooled StreamCache"
        },
        "CacheMemoryCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of in-memory StreamCache created"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedStreamCachingStrategy",
      "desc": "Managed StreamCachingStrategy"
    },
    "context\u003dMyCamel,type\u003dcomponents,name\u003d\"bean\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isHealthCheckSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckSupported"
        },
        "getComponentName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ComponentName"
        },
        "isHealthCheckConsumerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckConsumerEnabled"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isVerifySupported": {
          "args": [],
          "ret": "boolean",
          "desc": "VerifySupported"
        },
        "verify": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
          "desc": "Verify options against a given scope"
        },
        "isHealthCheckProducerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckProducerEnabled"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "VerifySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component support verification (parameters or connectivity)"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "HealthCheckProducerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether producer based health checks from this component is enabled (default disabled)"
        },
        "ComponentName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component Name"
        },
        "HealthCheckConsumerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether consumer based health checks from this component is enabled (default enabled)"
        },
        "HealthCheckSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component provides component specific health checks"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedComponent",
      "desc": "Managed Component"
    },
    "context\u003dMyCamel,type\u003dcomponents,name\u003d\"stream\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isHealthCheckSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckSupported"
        },
        "getComponentName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ComponentName"
        },
        "isHealthCheckConsumerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckConsumerEnabled"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isVerifySupported": {
          "args": [],
          "ret": "boolean",
          "desc": "VerifySupported"
        },
        "verify": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
          "desc": "Verify options against a given scope"
        },
        "isHealthCheckProducerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckProducerEnabled"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "VerifySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component support verification (parameters or connectivity)"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "HealthCheckProducerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether producer based health checks from this component is enabled (default disabled)"
        },
        "ComponentName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component Name"
        },
        "HealthCheckConsumerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether consumer based health checks from this component is enabled (default enabled)"
        },
        "HealthCheckSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component provides component specific health checks"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedComponent",
      "desc": "Managed Component"
    },
    "context\u003dMyCamel,type\u003dthreadpools,name\u003d\"ErrorHandlerRedeliveryThreadPool\"": {
      "op": {
        "setMaximumPoolSize": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "MaximumPoolSize"
        },
        "getPoolSize": {
          "args": [],
          "ret": "int",
          "desc": "PoolSize"
        },
        "getKeepAliveTime": {
          "args": [],
          "ret": "long",
          "desc": "KeepAliveTime"
        },
        "getTaskQueueRemainingCapacity": {
          "args": [],
          "ret": "int",
          "desc": "Returns the number of additional elements that the Task queue can ideally (in the absence of memory or resource constraints) accept"
        },
        "getCorePoolSize": {
          "args": [],
          "ret": "int",
          "desc": "CorePoolSize"
        },
        "getId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Id"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getThreadPoolProfileId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ThreadPoolProfileId"
        },
        "purge": {
          "args": [],
          "ret": "void",
          "desc": "Purges the pool"
        },
        "isTaskQueueEmpty": {
          "args": [],
          "ret": "boolean",
          "desc": "TaskQueueEmpty"
        },
        "getActiveCount": {
          "args": [],
          "ret": "int",
          "desc": "ActiveCount"
        },
        "getMaximumPoolSize": {
          "args": [],
          "ret": "int",
          "desc": "MaximumPoolSize"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getCompletedTaskCount": {
          "args": [],
          "ret": "long",
          "desc": "CompletedTaskCount"
        },
        "isAllowCoreThreadTimeout": {
          "args": [],
          "ret": "boolean",
          "desc": "AllowCoreThreadTimeout"
        },
        "getTaskQueueSize": {
          "args": [],
          "ret": "long",
          "desc": "TaskQueueSize"
        },
        "getTaskCount": {
          "args": [],
          "ret": "long",
          "desc": "TaskCount"
        },
        "setAllowCoreThreadTimeout": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "AllowCoreThreadTimeout"
        },
        "getSourceId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceId"
        },
        "getLargestPoolSize": {
          "args": [],
          "ret": "int",
          "desc": "LargestPoolSize"
        },
        "setCorePoolSize": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "CorePoolSize"
        },
        "setKeepAliveTime": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "KeepAliveTime"
        },
        "isShutdown": {
          "args": [],
          "ret": "boolean",
          "desc": "Shutdown"
        }
      },
      "attr": {
        "KeepAliveTime": {
          "rw": true,
          "type": "long",
          "desc": "Keep alive time in seconds"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "MaximumPoolSize": {
          "rw": true,
          "type": "int",
          "desc": "Maximum pool size"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TaskCount": {
          "rw": false,
          "type": "long",
          "desc": "Task count"
        },
        "SourceId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ID of source for creating Thread Pool"
        },
        "PoolSize": {
          "rw": false,
          "type": "int",
          "desc": "Pool size"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID for the source, which created the Thread Pool"
        },
        "CorePoolSize": {
          "rw": true,
          "type": "int",
          "desc": "Core pool size"
        },
        "AllowCoreThreadTimeout": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether core threads is allowed to timeout if no tasks in queue to process"
        },
        "TaskQueueSize": {
          "rw": false,
          "type": "long",
          "desc": "Task queue size"
        },
        "Shutdown": {
          "rw": false,
          "type": "boolean",
          "desc": "Is shutdown"
        },
        "CompletedTaskCount": {
          "rw": false,
          "type": "long",
          "desc": "Completed task count"
        },
        "LargestPoolSize": {
          "rw": false,
          "type": "int",
          "desc": "Largest pool size"
        },
        "ThreadPoolProfileId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ID of the thread pool profile which this pool is based upon"
        },
        "TaskQueueEmpty": {
          "rw": false,
          "type": "boolean",
          "desc": "Is task queue empty"
        },
        "ActiveCount": {
          "rw": false,
          "type": "int",
          "desc": "Active count"
        },
        "Id": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Thread Pool ID"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedThreadPool",
      "desc": "Managed ThreadPool"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dPropertiesComponent": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "getSystemPropertiesMode": {
          "args": [],
          "ret": "int",
          "desc": "SystemPropertiesMode"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "isIgnoreMissingLocation": {
          "args": [],
          "ret": "boolean",
          "desc": "IgnoreMissingLocation"
        },
        "isNestedPlaceholder": {
          "args": [],
          "ret": "boolean",
          "desc": "NestedPlaceholder"
        },
        "isIgnoreMissingProperty": {
          "args": [],
          "ret": "boolean",
          "desc": "IgnoreMissingProperty"
        },
        "reloadProperties": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Reload properties from the given location patterns"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "isDefaultFallbackEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "DefaultFallbackEnabled"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getEncoding": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Encoding"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getEnvironmentVariableMode": {
          "args": [],
          "ret": "int",
          "desc": "EnvironmentVariableMode"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "EnvironmentVariableMode": {
          "rw": false,
          "type": "int",
          "desc": "Environment variable mode"
        },
        "Encoding": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Encoding to use when loading properties file from the file system or classpath"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "DefaultFallbackEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether to support using fallback values if a property cannot be found"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SystemPropertiesMode": {
          "rw": false,
          "type": "int",
          "desc": "System properties mode"
        },
        "IgnoreMissingProperty": {
          "rw": false,
          "type": "boolean",
          "desc": "Ignore missing location"
        },
        "NestedPlaceholder": {
          "rw": false,
          "type": "boolean",
          "desc": "Nested placeholder"
        },
        "IgnoreMissingLocation": {
          "rw": false,
          "type": "boolean",
          "desc": "Ignore missing location"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        }
      },
      "class": "org.apache.camel.component.properties.PropertiesComponent",
      "desc": "Managed PropertiesComponent"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultMessageHistoryFactory": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "isCopyMessage": {
          "args": [],
          "ret": "boolean",
          "desc": "CopyMessage"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getNodePattern": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePattern"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "setNodePattern": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "NodePattern"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "isEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "Enabled"
        },
        "setCopyMessage": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "CopyMessage"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "NodePattern": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "Pattern to filter EIPs"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "CopyMessage": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether a copy of the message is included in the message history"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "Enabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether message history is enabled"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.impl.engine.DefaultMessageHistoryFactory",
      "desc": "Managed MessageHistoryFactory"
    },
    "context\u003dMyCamel,type\u003dcomponents,name\u003d\"log\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isHealthCheckSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckSupported"
        },
        "getComponentName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ComponentName"
        },
        "isHealthCheckConsumerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckConsumerEnabled"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isVerifySupported": {
          "args": [],
          "ret": "boolean",
          "desc": "VerifySupported"
        },
        "verify": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
          "desc": "Verify options against a given scope"
        },
        "isHealthCheckProducerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckProducerEnabled"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "VerifySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component support verification (parameters or connectivity)"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "HealthCheckProducerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether producer based health checks from this component is enabled (default disabled)"
        },
        "ComponentName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component Name"
        },
        "HealthCheckConsumerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether consumer based health checks from this component is enabled (default enabled)"
        },
        "HealthCheckSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component provides component specific health checks"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedComponent",
      "desc": "Managed Component"
    },
    "context\u003dMyCamel,type\u003dproducers,name\u003dLogProducer(0x6c1bebca)": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "isSingleton": {
          "args": [],
          "ret": "boolean",
          "desc": "Singleton"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Singleton": {
          "rw": false,
          "type": "boolean",
          "desc": "Singleton"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedProducer",
      "desc": "Managed Producer"
    },
    "context\u003dMyCamel,type\u003dprocessors,name\u003d\"transform1\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "getIndex": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Index"
        },
        "getToType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ToType"
        },
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "getSourceLineNumber": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "SourceLineNumber"
        },
        "getStepId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "StepId"
        },
        "getSupportExtendedInformation": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "SupportExtendedInformation"
        },
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getExpression": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Expression"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Processor"
        },
        "reset": {
          "args": [],
          "ret": "void",
          "desc": "Reset counters"
        },
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getProcessorName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorName"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "getSourceLocation": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocation"
        },
        "getNodePrefixId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePrefixId"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "getFromType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FromType"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getProcessorId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorId"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Processor"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getLevel": {
          "args": [],
          "ret": "int",
          "desc": "Level"
        },
        "getExpressionLanguage": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ExpressionLanguage"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "dumpProcessorAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the processor as XML"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        }
      },
      "attr": {
        "SourceLocation": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Source file Location"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "NodePrefixId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Node Prefix ID"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "Index": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Processor Index"
        },
        "FromType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Data type used as defined input for the message transformation"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "StepId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Step ID"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "ProcessorName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor Name (Short)"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "ProcessorId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor ID"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "SupportExtendedInformation": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Whether this processor supports extended JMX information"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "ExpressionLanguage": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The language for the expression"
        },
        "ToType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Data type representing the defined outcome of a data type transformation (the new message body to use)"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "Expression": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Expression to return the transformed message body (the new message body to use)"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor State"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "Level": {
          "rw": false,
          "type": "int",
          "desc": "Processor Level in the route tree"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "SourceLineNumber": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedTransformer",
      "desc": "Managed Transformer"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultInflightRepository": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getSize": {
          "args": [],
          "ret": "int",
          "desc": "Size"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "size": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "int",
          "desc": "Current size of inflight exchanges which are from the given route."
        },
        "isInflightBrowseEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "InflightBrowseEnabled"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "browse": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003dint, desc\u003d}",
              "{name\u003dp3, type\u003dboolean, desc\u003d}"
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "List all the exchanges that origins from the given route, which are currently inflight, limited and sorted"
          },
          {
            "args": ["{name\u003dp1, type\u003dint, desc\u003d}", "{name\u003dp2, type\u003dboolean, desc\u003d}"],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the exchanges which are currently inflight, limited and sorted"
          },
          {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the exchanges which are currently inflight"
          }
        ]
      },
      "attr": {
        "InflightBrowseEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether browsing inflight exchanges is enabled. This is required to be enabled for the browse operations to function."
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Size": {
          "rw": false,
          "type": "int",
          "desc": "Current size of inflight exchanges."
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedInflightRepository",
      "desc": "Managed InflightRepository"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultRouteController": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getControlledRoutes": {
          "args": [],
          "ret": "java.util.Collection",
          "desc": "ControlledRoutes"
        },
        "isStartingRoutes": {
          "args": [],
          "ret": "boolean",
          "desc": "StartingRoutes"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getRouteStartupLoggingLevel": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteStartupLoggingLevel"
        },
        "isHasUnhealthyRoutes": {
          "args": [],
          "ret": "boolean",
          "desc": "HasUnhealthyRoutes"
        }
      },
      "attr": {
        "StartingRoutes": {
          "rw": false,
          "type": "boolean",
          "desc": "Indicates whether the route controller is doing initial starting of the routes."
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "HasUnhealthyRoutes": {
          "rw": false,
          "type": "boolean",
          "desc": "Indicates if the route controller has routes that are currently unhealthy"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "ControlledRoutes": {
          "rw": false,
          "type": "java.util.Collection",
          "desc": "Controlled Routes"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "RouteStartupLoggingLevel": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Logging level used for logging route startup activity"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedRouteController",
      "desc": "Managed RouteController"
    },
    "context\u003dMyCamel,type\u003dhealth,name\u003dDefaultHealthCheck": {
      "op": {
        "isHealthyLiveness": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthyLiveness"
        },
        "enableById": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Enables an Health Check by ID"
        },
        "isEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "Enabled"
        },
        "disableById": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Disables an Health Check by ID"
        },
        "details": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Registered Health Checks Details"
        },
        "invoke": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Invoke an Health Check by ID"
        },
        "getHealthChecksIDs": {
          "args": [],
          "ret": "java.util.Collection",
          "desc": "HealthChecksIDs"
        },
        "isHealthy": {
          "args": [],
          "ret": "boolean",
          "desc": "Healthy"
        },
        "isHealthyReadiness": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthyReadiness"
        }
      },
      "attr": {
        "HealthyLiveness": {
          "rw": false,
          "type": "boolean",
          "desc": "Application Health (only liveness checks)"
        },
        "HealthChecksIDs": {
          "rw": false,
          "type": "java.util.Collection",
          "desc": "Registered Health Checks IDs"
        },
        "Enabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether Health Check is enabled globally"
        },
        "Healthy": {
          "rw": false,
          "type": "boolean",
          "desc": "Application Health (all checks)"
        },
        "HealthyReadiness": {
          "rw": false,
          "type": "boolean",
          "desc": "Application Health (only readiness checks)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedCamelHealth",
      "desc": ""
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultTypeConverter": {
      "op": {
        "getMissCounter": {
          "args": [],
          "ret": "long",
          "desc": "MissCounter"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "getAttemptCounter": {
          "args": [],
          "ret": "long",
          "desc": "AttemptCounter"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "getTypeConverterExistsLoggingLevel": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "TypeConverterExistsLoggingLevel"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "resetTypeConversionCounters": {
          "args": [],
          "ret": "void",
          "desc": "Resets the type conversion counters"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "hasTypeConverter": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "boolean",
          "desc": "Checks whether a type converter exists for converting (from -\u003e to)"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getNoopCounter": {
          "args": [],
          "ret": "long",
          "desc": "NoopCounter"
        },
        "getNumberOfTypeConverters": {
          "args": [],
          "ret": "int",
          "desc": "NumberOfTypeConverters"
        },
        "getTypeConverterExists": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "TypeConverterExists"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getFailedCounter": {
          "args": [],
          "ret": "long",
          "desc": "FailedCounter"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getHitCounter": {
          "args": [],
          "ret": "long",
          "desc": "HitCounter"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Utilization statistics enabled"
        },
        "NumberOfTypeConverters": {
          "rw": false,
          "type": "int",
          "desc": "Number of type converters in the registry"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "FailedCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of type conversion failures (failed conversions)"
        },
        "TypeConverterExistsLoggingLevel": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Logging level to use if attempting to add a duplicate type converter"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "HitCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of type conversion hits (successful conversions)"
        },
        "AttemptCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of type conversion attempts"
        },
        "TypeConverterExists": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "What to do if attempting to add a duplicate type converter (Override, Ignore or Fail)"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "NoopCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of noop attempts (no type conversion was needed)"
        },
        "MissCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of type conversion misses (no suitable type converter)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedTypeConverterRegistry",
      "desc": "Managed TypeConverterRegistry"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultReactiveExecutor": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "getPendingTasks": {
          "args": [],
          "ret": "int",
          "desc": "PendingTasks"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getCreatedWorkers": {
          "args": [],
          "ret": "int",
          "desc": "CreatedWorkers"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "getRunningWorkers": {
          "args": [],
          "ret": "int",
          "desc": "RunningWorkers"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "StatisticsEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether statistics is enabled"
        },
        "RunningWorkers": {
          "rw": false,
          "type": "int",
          "desc": "Number of running workers"
        },
        "CreatedWorkers": {
          "rw": false,
          "type": "int",
          "desc": "Number of created workers"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "PendingTasks": {
          "rw": false,
          "type": "int",
          "desc": "Number of pending tasks"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.impl.engine.DefaultReactiveExecutor",
      "desc": "Managed ReactiveExecutor"
    },
    "context\u003dMyCamel,type\u003dprocessors,name\u003d\"to1\"": {
      "op": {
        "getExchangesCompleted": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesCompleted"
        },
        "getLastProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "LastProcessingTime"
        },
        "getDeltaProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "DeltaProcessingTime"
        },
        "getIndex": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "Index"
        },
        "getStartTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "StartTimestamp"
        },
        "dumpStatsAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the statistics as XML"
        },
        "getLastExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeFailureTimestamp"
        },
        "getSourceLineNumber": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "SourceLineNumber"
        },
        "getStepId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "StepId"
        },
        "getSupportExtendedInformation": {
          "args": [],
          "ret": "java.lang.Boolean",
          "desc": "SupportExtendedInformation"
        },
        "getIdleSince": {
          "args": [],
          "ret": "long",
          "desc": "IdleSince"
        },
        "getVariableSend": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "VariableSend"
        },
        "getMinProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MinProcessingTime"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getExchangesTotal": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesTotal"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Processor"
        },
        "reset": {
          "args": [],
          "ret": "void",
          "desc": "Reset counters"
        },
        "getFirstExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeCompletedExchangeId"
        },
        "getLastExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCompletedTimestamp"
        },
        "getProcessorName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorName"
        },
        "getDestination": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Destination"
        },
        "getMessageExchangePattern": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "MessageExchangePattern"
        },
        "getTotalProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "TotalProcessingTime"
        },
        "getSourceLocation": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "SourceLocation"
        },
        "getNodePrefixId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "NodePrefixId"
        },
        "getLastExchangeCreatedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "LastExchangeCreatedTimestamp"
        },
        "getFirstExchangeCompletedTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeCompletedTimestamp"
        },
        "getLastExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeFailureExchangeId"
        },
        "extendedInformation": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "Statistics of the endpoint which has been sent to"
        },
        "getMaxProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MaxProcessingTime"
        },
        "getLastExchangeCompletedExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LastExchangeCompletedExchangeId"
        },
        "setStatisticsEnabled": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "StatisticsEnabled"
        },
        "getProcessorId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ProcessorId"
        },
        "getMeanProcessingTime": {
          "args": [],
          "ret": "long",
          "desc": "MeanProcessingTime"
        },
        "getExternalRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "ExternalRedeliveries"
        },
        "getVariableReceive": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "VariableReceive"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Processor"
        },
        "getFirstExchangeFailureExchangeId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "FirstExchangeFailureExchangeId"
        },
        "getResetTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "ResetTimestamp"
        },
        "getExchangesFailed": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesFailed"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getLevel": {
          "args": [],
          "ret": "int",
          "desc": "Level"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getFailuresHandled": {
          "args": [],
          "ret": "long",
          "desc": "FailuresHandled"
        },
        "getExchangesInflight": {
          "args": [],
          "ret": "long",
          "desc": "ExchangesInflight"
        },
        "dumpProcessorAsXml": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Dumps the processor as XML"
        },
        "getRedeliveries": {
          "args": [],
          "ret": "long",
          "desc": "Redeliveries"
        },
        "isStatisticsEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "StatisticsEnabled"
        },
        "getFirstExchangeFailureTimestamp": {
          "args": [],
          "ret": "java.util.Date",
          "desc": "FirstExchangeFailureTimestamp"
        }
      },
      "attr": {
        "SourceLocation": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Source file Location"
        },
        "StatisticsEnabled": {
          "rw": true,
          "type": "boolean",
          "desc": "Statistics enabled"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "Destination": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Destination as Endpoint URI"
        },
        "ExchangesCompleted": {
          "rw": false,
          "type": "long",
          "desc": "Number of completed exchanges"
        },
        "LastProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Last Processing Time [milliseconds]"
        },
        "ExchangesFailed": {
          "rw": false,
          "type": "long",
          "desc": "Number of failed exchanges"
        },
        "FirstExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Completed ExchangeId"
        },
        "StartTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was initially started"
        },
        "FirstExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Completed Timestamp"
        },
        "NodePrefixId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Node Prefix ID"
        },
        "LastExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Failed Timestamp"
        },
        "Index": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Processor Index"
        },
        "VariableReceive": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Variable to store the received message body (only body, not headers)"
        },
        "MaxProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Max Processing Time [milliseconds]"
        },
        "IdleSince": {
          "rw": false,
          "type": "long",
          "desc": "Time in millis being idle (no messages incoming or inflight)"
        },
        "LastExchangeCompletedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Completed Timestamp"
        },
        "DeltaProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Delta Processing Time [milliseconds]"
        },
        "StepId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Step ID"
        },
        "MessageExchangePattern": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Message Exchange Pattern"
        },
        "VariableSend": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Variable as the source for the message body to send"
        },
        "ExternalRedeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of external initiated redeliveries (such as from JMS broker)"
        },
        "ProcessorName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor Name (Short)"
        },
        "LastExchangeCreatedTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Last Exchange Created Timestamp"
        },
        "ExchangesTotal": {
          "rw": false,
          "type": "long",
          "desc": "Total number of exchanges"
        },
        "ResetTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "Timestamp when the stats was last reset or initially started"
        },
        "ExchangesInflight": {
          "rw": false,
          "type": "long",
          "desc": "Number of inflight exchanges"
        },
        "MeanProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Mean Processing Time [milliseconds]"
        },
        "LastExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Failed ExchangeId"
        },
        "FirstExchangeFailureExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "First Exchange Failed ExchangeId"
        },
        "ProcessorId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor ID"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "TotalProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Total Processing Time [milliseconds]"
        },
        "FirstExchangeFailureTimestamp": {
          "rw": false,
          "type": "java.util.Date",
          "desc": "First Exchange Failed Timestamp"
        },
        "SupportExtendedInformation": {
          "rw": false,
          "type": "java.lang.Boolean",
          "desc": "Whether this processor supports extended JMX information"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "FailuresHandled": {
          "rw": false,
          "type": "long",
          "desc": "Number of failures handled"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Processor State"
        },
        "Redeliveries": {
          "rw": false,
          "type": "long",
          "desc": "Number of redeliveries (internal only)"
        },
        "MinProcessingTime": {
          "rw": false,
          "type": "long",
          "desc": "Min Processing Time [milliseconds]"
        },
        "Level": {
          "rw": false,
          "type": "int",
          "desc": "Processor Level in the route tree"
        },
        "LastExchangeCompletedExchangeId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Last Exchange Completed ExchangeId"
        },
        "SourceLineNumber": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedSendProcessor",
      "desc": "Managed SendProcessor"
    },
    "context\u003dMyCamel,type\u003dtracer,name\u003dBacklogDebugger": {
      "op": {
        "evaluateExpressionAtBreakpoint": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp4, type\u003djava.lang.String, desc\u003d}"
            ],
            "ret": "java.lang.Object",
            "desc": "Evaluates the expression at a given breakpoint node id"
          },
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.String, desc\u003d}"
            ],
            "ret": "java.lang.String",
            "desc": "Evaluates the expression at a given breakpoint node id and returns the result as String"
          }
        ],
        "getFallbackTimeout": {
          "args": [],
          "ret": "long",
          "desc": "FallbackTimeout"
        },
        "setMessageHeaderOnBreakpoint": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.Object, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates/adds the message header (uses same type as old header value) on the suspended breakpoint at the given node id"
          },
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.Object, desc\u003d}",
              "{name\u003dp4, type\u003djava.lang.String, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates/adds the message header (with a new type) on the suspended breakpoint at the given node id"
          }
        ],
        "setBodyMaxChars": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "BodyMaxChars"
        },
        "isIncludeExchangeVariables": {
          "args": [],
          "ret": "boolean",
          "desc": "IncludeExchangeVariables"
        },
        "messageHistoryOnBreakpointAsXml": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Returns the message history at the given node id as XML"
        },
        "breakpoints": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "Return the node ids which has breakpoints"
        },
        "removeMessageHeaderOnBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Removes the message header on the suspended breakpoint at the given node id"
        },
        "isSingleStepMode": {
          "args": [],
          "ret": "boolean",
          "desc": "SingleStepMode"
        },
        "isIncludeExchangeProperties": {
          "args": [],
          "ret": "boolean",
          "desc": "IncludeExchangeProperties"
        },
        "setFallbackTimeout": {
          "args": [
            {
              "name": "p1",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "FallbackTimeout"
        },
        "addBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Add a breakpoint at the given node id"
        },
        "setBodyIncludeFiles": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "BodyIncludeFiles"
        },
        "resumeAll": {
          "args": [],
          "ret": "void",
          "desc": "Resume running any suspended breakpoints, and exits step mode"
        },
        "resumeBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Resume running from the suspended breakpoint at the given node id"
        },
        "removeMessageBodyOnBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Removes the message body on the suspended breakpoint at the given node id"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "removeExchangePropertyOnBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Removes the exchange property on the suspended breakpoint at the given node id"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "setLoggingLevel": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "LoggingLevel"
        },
        "isEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "Enabled"
        },
        "getDebugCounter": {
          "args": [],
          "ret": "long",
          "desc": "DebugCounter"
        },
        "setMessageBodyOnBreakpoint": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.Object, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.String, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates the message body (with a new type) on the suspended breakpoint at the given node id"
          },
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.Object, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates the message body (uses same type as old body) on the suspended breakpoint at the given node id"
          }
        ],
        "resetDebugCounter": {
          "args": [],
          "ret": "void",
          "desc": "Resets the debug counter"
        },
        "removeBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Remote the breakpoint from the given node id (will resume suspend breakpoint first)"
        },
        "setExchangePropertyOnBreakpoint": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.Object, desc\u003d}",
              "{name\u003dp4, type\u003djava.lang.String, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates/adds the exchange property (with a new type) on the suspended breakpoint at the given node id"
          },
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp3, type\u003djava.lang.Object, desc\u003d}"
            ],
            "ret": "void",
            "desc": "Updates/adds the exchange property (uses same type as old exchange property  value) on the suspended breakpoint at the given node id"
          }
        ],
        "stepBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Starts single step debugging from the suspended breakpoint at the given node id"
        },
        "validateConditionalBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Used for validating if a given breakpoint condition (predicate) is valid or not"
        },
        "disableDebugger": {
          "args": [],
          "ret": "void",
          "desc": "Disable the debugger"
        },
        "isSuspendedMode": {
          "args": [],
          "ret": "boolean",
          "desc": "SuspendedMode"
        },
        "setBodyIncludeStreams": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "BodyIncludeStreams"
        },
        "getBodyMaxChars": {
          "args": [],
          "ret": "int",
          "desc": "BodyMaxChars"
        },
        "getLoggingLevel": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "LoggingLevel"
        },
        "suspendedBreakpointNodeIds": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "Return the node ids which is currently suspended"
        },
        "setIncludeExchangeProperties": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "IncludeExchangeProperties"
        },
        "attach": {
          "args": [],
          "ret": "void",
          "desc": "Attach the debugger"
        },
        "isBodyIncludeFiles": {
          "args": [],
          "ret": "boolean",
          "desc": "BodyIncludeFiles"
        },
        "enableDebugger": {
          "args": [],
          "ret": "void",
          "desc": "Enable the debugger"
        },
        "removeAllBreakpoints": {
          "args": [],
          "ret": "void",
          "desc": "Remote all breakpoints (will resume all suspend breakpoints first and exists single step mode)"
        },
        "addConditionalBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Add a conditional breakpoint at the given node id"
        },
        "dumpTracedMessagesAsXml": [
          {
            "args": [
              "{name\u003dp1, type\u003djava.lang.String, desc\u003d}",
              "{name\u003dp2, type\u003dboolean, desc\u003d}"
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the messages in XML format from the suspended breakpoint at the given node."
          },
          {
            "args": ["{name\u003dp1, type\u003djava.lang.String, desc\u003d}"],
            "ret": "java.lang.String",
            "desc": "Dumps the messages in XML format from the suspended breakpoint at the given node."
          }
        ],
        "isBodyIncludeStreams": {
          "args": [],
          "ret": "boolean",
          "desc": "BodyIncludeStreams"
        },
        "dumpTracedMessagesAsJSon": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dumps the messages in JSon format from the suspended breakpoint at the given node."
        },
        "setIncludeExchangeVariables": {
          "args": [
            {
              "name": "p1",
              "type": "boolean",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "IncludeExchangeVariables"
        },
        "enableBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Enables a breakpoint which has been disabled"
        },
        "disableBreakpoint": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Disables a breakpoint"
        },
        "isStandby": {
          "args": [],
          "ret": "boolean",
          "desc": "Standby"
        },
        "detach": {
          "args": [],
          "ret": "void",
          "desc": "Detach the debugger"
        },
        "step": {
          "args": [],
          "ret": "void",
          "desc": "Steps to next node in step mode"
        }
      },
      "attr": {
        "SingleStepMode": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether currently in step mode"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "FallbackTimeout": {
          "rw": true,
          "type": "long",
          "desc": "Fallback Timeout in seconds when block the message processing in Camel"
        },
        "LoggingLevel": {
          "rw": true,
          "type": "java.lang.String",
          "desc": "Logging Level"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "BodyMaxChars": {
          "rw": true,
          "type": "int",
          "desc": "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size."
        },
        "SuspendedMode": {
          "rw": false,
          "type": "boolean",
          "desc": "Suspended mode will suspend all exchanges until a remote debugger is attached"
        },
        "Enabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Is debugger enabled"
        },
        "Standby": {
          "rw": false,
          "type": "boolean",
          "desc": "Is debugger standby"
        },
        "BodyIncludeFiles": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to include file based message body in the trace message."
        },
        "BodyIncludeStreams": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to include stream based message body in the trace message"
        },
        "IncludeExchangeProperties": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to include exchange properties in the trace message."
        },
        "IncludeExchangeVariables": {
          "rw": true,
          "type": "boolean",
          "desc": "Whether to include exchange variables in the trace message."
        },
        "DebugCounter": {
          "rw": false,
          "type": "long",
          "desc": "Number of total debugged messages"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedBacklogDebugger",
      "desc": "Managed BacklogDebugger"
    },
    "context\u003dMyCamel,type\u003dconsumers,name\u003dTimerConsumer(0x6a04d2a4)": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isPolling": {
          "args": [],
          "ret": "boolean",
          "desc": "Polling"
        },
        "isFixedRate": {
          "args": [],
          "ret": "boolean",
          "desc": "FixedRate"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "getCounter": {
          "args": [],
          "ret": "long",
          "desc": "Counter"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "getDelay": {
          "args": [],
          "ret": "long",
          "desc": "Delay"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getPeriod": {
          "args": [],
          "ret": "long",
          "desc": "Period"
        },
        "getTimerName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "TimerName"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getInflightExchanges": {
          "args": [],
          "ret": "java.lang.Integer",
          "desc": "InflightExchanges"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getRunLoggingLevel": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RunLoggingLevel"
        },
        "getRepeatCount": {
          "args": [],
          "ret": "long",
          "desc": "RepeatCount"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "RepeatCount": {
          "rw": false,
          "type": "long",
          "desc": "Repeat Count"
        },
        "Polling": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether polling is currently in progress"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "RunLoggingLevel": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that."
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "Period": {
          "rw": false,
          "type": "long",
          "desc": "Timer Period"
        },
        "FixedRate": {
          "rw": false,
          "type": "boolean",
          "desc": "Timer FixedRate"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "TimerName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Timer Name"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        },
        "Delay": {
          "rw": false,
          "type": "long",
          "desc": "Timer Delay"
        },
        "Counter": {
          "rw": false,
          "type": "long",
          "desc": "Total number of polls run"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "InflightExchanges": {
          "rw": false,
          "type": "java.lang.Integer",
          "desc": "Current number of inflight Exchanges"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        }
      },
      "class": "org.apache.camel.component.timer.TimerConsumer",
      "desc": "Managed TimerConsumer"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultExecutorServiceManager": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedService",
      "desc": "Managed Service"
    },
    "context\u003dMyCamel,type\u003dcomponents,name\u003d\"timer\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isHealthCheckSupported": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckSupported"
        },
        "getComponentName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ComponentName"
        },
        "isHealthCheckConsumerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckConsumerEnabled"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isVerifySupported": {
          "args": [],
          "ret": "boolean",
          "desc": "VerifySupported"
        },
        "verify": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.util.Map",
              "desc": ""
            }
          ],
          "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
          "desc": "Verify options against a given scope"
        },
        "isHealthCheckProducerEnabled": {
          "args": [],
          "ret": "boolean",
          "desc": "HealthCheckProducerEnabled"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "VerifySupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component support verification (parameters or connectivity)"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "HealthCheckProducerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether producer based health checks from this component is enabled (default disabled)"
        },
        "ComponentName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Component Name"
        },
        "HealthCheckConsumerEnabled": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether consumer based health checks from this component is enabled (default enabled)"
        },
        "HealthCheckSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this component provides component specific health checks"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedComponent",
      "desc": "Managed Component"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dDefaultRoutesLoader": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedService",
      "desc": "Managed Service"
    },
    "context\u003dMyCamel,type\u003dservices,name\u003dRouteVariableRepository": {
      "op": {
        "suspend": {
          "args": [],
          "ret": "void",
          "desc": "Suspend Service"
        },
        "resume": {
          "args": [],
          "ret": "void",
          "desc": "Resume Service"
        },
        "variables": {
          "args": [],
          "ret": "javax.management.openmbean.TabularData",
          "desc": "List all variables"
        },
        "isSuspended": {
          "args": [],
          "ret": "boolean",
          "desc": "Suspended"
        },
        "start": {
          "args": [],
          "ret": "void",
          "desc": "Start Service"
        },
        "clear": {
          "args": [],
          "ret": "void",
          "desc": "Removes all variables"
        },
        "getRouteId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "RouteId"
        },
        "getId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Id"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        },
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "isSupportSuspension": {
          "args": [],
          "ret": "boolean",
          "desc": "SupportSuspension"
        },
        "getSize": {
          "args": [],
          "ret": "int",
          "desc": "Size"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "names": {
          "args": [],
          "ret": "java.util.Set",
          "desc": "Variable names"
        },
        "stop": {
          "args": [],
          "ret": "void",
          "desc": "Stop Service"
        },
        "isStaticService": {
          "args": [],
          "ret": "boolean",
          "desc": "StaticService"
        },
        "getServiceType": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "ServiceType"
        }
      },
      "attr": {
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service State"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        },
        "ServiceType": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Service Type"
        },
        "Size": {
          "rw": false,
          "type": "int",
          "desc": "Number of variables"
        },
        "SupportSuspension": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service supports suspension"
        },
        "RouteId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Route ID"
        },
        "Id": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Repository ID"
        },
        "Suspended": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is suspended"
        },
        "StaticService": {
          "rw": false,
          "type": "boolean",
          "desc": "Whether this service is static"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedVariableRepository",
      "desc": "Managed VariableRepository"
    },
    "context\u003dMyCamel,type\u003dendpoints,name\u003d\"stream://out\"": {
      "op": {
        "getCamelId": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelId"
        },
        "getEndpointUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointUri"
        },
        "getState": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "State"
        },
        "getEndpointBaseUri": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "EndpointBaseUri"
        },
        "isSingleton": {
          "args": [],
          "ret": "boolean",
          "desc": "Singleton"
        },
        "getCamelManagementName": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "CamelManagementName"
        }
      },
      "attr": {
        "EndpointUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint URI"
        },
        "CamelManagementName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ManagementName"
        },
        "EndpointBaseUri": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint Base URI (no query parameters)"
        },
        "State": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Endpoint State"
        },
        "Singleton": {
          "rw": false,
          "type": "boolean",
          "desc": "Singleton"
        },
        "CamelId": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Camel ID"
        }
      },
      "class": "org.apache.camel.management.mbean.ManagedEndpoint",
      "desc": "Managed Endpoint"
    }
  },
  "com.sun.management": {
    "type\u003dHotSpotDiagnostic": {
      "op": {
        "setVMOption": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "setVMOption"
        },
        "dumpThreads": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "dumpThreads"
        },
        "getVMOption": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            }
          ],
          "ret": "javax.management.openmbean.CompositeData",
          "desc": "getVMOption"
        },
        "dumpHeap": {
          "args": [
            {
              "name": "p0",
              "type": "java.lang.String",
              "desc": "p0"
            },
            {
              "name": "p1",
              "type": "boolean",
              "desc": "p1"
            }
          ],
          "ret": "void",
          "desc": "dumpHeap"
        }
      },
      "attr": {
        "DiagnosticOptions": {
          "rw": false,
          "type": "[Ljavax.management.openmbean.CompositeData;",
          "desc": "DiagnosticOptions"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "com.sun.management.internal.HotSpotDiagnostic",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dDiagnosticCommand": {
      "op": {
        "vmUptime": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print VM uptime."
        },
        "jfrDump": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Copies contents of a JFR recording to file. Either the name or the recording id must be specified."
        },
        "jfrStart": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Starts a new JFR recording"
        },
        "threadPrint": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print all threads with stacktraces."
        },
        "jfrStop": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Stops a JFR recording"
        },
        "vmCds": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dump a static or dynamic shared archive including all shareable classes"
        },
        "compilerCodelist": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print all compiled methods in code cache that are alive"
        },
        "vmEvents": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print VM event logs"
        },
        "systemNativeHeapInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Attempts to output information regarding native heap usage through malloc_info(3). If unsuccessful outputs \"Error: \" and a reason."
        },
        "jfrCheck": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Checks running JFR recording(s)"
        },
        "vmSymboltable": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dump symbol table."
        },
        "gcRun": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Call java.lang.System.gc()."
        },
        "systemTrimNativeHeap": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Attempts to free up memory by trimming the C-heap."
        },
        "vmClassloaders": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Prints classloader hierarchy."
        },
        "vmMetaspace": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Prints the statistics for the metaspace"
        },
        "compilerDirectivesPrint": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print all active compiler directives."
        },
        "vmSetFlag": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Sets VM flag option using the provided value."
        },
        "compilerDirectivesAdd": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Add compiler directives from file."
        },
        "threadDumpToFile": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dump threads, with stack traces, to a file in plain text or JSON format."
        },
        "vmDynlibs": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print loaded dynamic libraries."
        },
        "compilerCodecache": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print code cache layout and bounds."
        },
        "vmNativeMemory": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print native memory usage"
        },
        "compilerPerfmap": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Write map file for Linux perf tool."
        },
        "gcClassHistogram": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Provide statistics about the Java heap usage."
        },
        "gcRunFinalization": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Call java.lang.System.runFinalization()."
        },
        "jvmtiDataDump": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Signal the JVM to do a data-dump request for JVMTI."
        },
        "jfrView": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Display event data in predefined views"
        },
        "vmClasses": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print all loaded classes"
        },
        "gcFinalizerInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Provide information about Java finalization queue."
        },
        "vmStringtable": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Dump string table."
        },
        "help": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "For more information about a specific command use \u0027help \u003ccommand\u003e\u0027. With no argument this will show a list of available commands. \u0027help all\u0027 will show help for all commands."
        },
        "jfrConfigure": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Configure JFR"
        },
        "vmSystemProperties": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print system properties."
        },
        "compilerDirectivesClear": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Remove all compiler directives."
        },
        "vmSystemdictionary": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Prints the statistics for dictionary hashtable sizes and bucket length"
        },
        "vmClassloaderStats": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print statistics about all ClassLoaders."
        },
        "compilerDirectivesRemove": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Remove latest added compiler directive."
        },
        "gcHeapInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Provide generic Java heap information."
        },
        "compilerCodeHeapAnalytics": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print CodeHeap analytics"
        },
        "vmVersion": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print JVM version information."
        },
        "vmInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print information about JVM environment and status."
        },
        "compilerQueue": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print methods queued for compilation."
        },
        "vmFlags": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print VM flag options and their current values."
        },
        "vmLog": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Lists current log configuration, enables/disables/configures a log output, or rotates all logs."
        },
        "jvmtiAgentLoad": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Load JVMTI native agent."
        },
        "vmClassHierarchy": {
          "args": [
            {
              "name": "arguments",
              "type": "[Ljava.lang.String;",
              "desc": "Array of Diagnostic Commands Arguments and Options"
            }
          ],
          "ret": "java.lang.String",
          "desc": "Print a list of all loaded classes, indented to show the class hierarchy. The name of each class is followed by the ClassLoaderData* of its ClassLoader, or \"null\" if loaded by the bootstrap class loader."
        },
        "vmCommandLine": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Print the command line used to start this VM instance."
        }
      },
      "notif": {
        "javax.management.Notification": {
          "types": ["jmx.mbean.info.changed"],
          "name": "javax.management.Notification",
          "desc": "Diagnostic Framework Notification"
        }
      },
      "class": "com.sun.management.internal.DiagnosticCommandImpl",
      "desc": "Diagnostic Commands"
    }
  },
  "java.nio": {
    "name\u003ddirect,type\u003dBufferPool": {
      "attr": {
        "TotalCapacity": {
          "rw": false,
          "type": "long",
          "desc": "TotalCapacity"
        },
        "MemoryUsed": {
          "rw": false,
          "type": "long",
          "desc": "MemoryUsed"
        },
        "Count": {
          "rw": false,
          "type": "long",
          "desc": "Count"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.ManagementFactoryHelper$1",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dmapped,type\u003dBufferPool": {
      "attr": {
        "TotalCapacity": {
          "rw": false,
          "type": "long",
          "desc": "TotalCapacity"
        },
        "MemoryUsed": {
          "rw": false,
          "type": "long",
          "desc": "MemoryUsed"
        },
        "Count": {
          "rw": false,
          "type": "long",
          "desc": "Count"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.ManagementFactoryHelper$1",
      "desc": "Information on the management interface of the MBean"
    },
    "name\u003dmapped - \u0027non-volatile memory\u0027,type\u003dBufferPool": {
      "attr": {
        "TotalCapacity": {
          "rw": false,
          "type": "long",
          "desc": "TotalCapacity"
        },
        "MemoryUsed": {
          "rw": false,
          "type": "long",
          "desc": "MemoryUsed"
        },
        "Count": {
          "rw": false,
          "type": "long",
          "desc": "Count"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "ObjectName": {
          "rw": false,
          "type": "javax.management.ObjectName",
          "desc": "ObjectName"
        }
      },
      "class": "sun.management.ManagementFactoryHelper$1",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "org.xnio": {
    "type\u003dXnio,provider\u003d\"nio\",worker\u003d\"XNIO-1\",address\u003d\"/[0:0:0:0:0:0:0:0]:8080\"": {
      "attr": {
        "ProviderName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ProviderName"
        },
        "ConnectionCount": {
          "rw": false,
          "type": "int",
          "desc": "ConnectionCount"
        },
        "ConnectionLimitLowWater": {
          "rw": false,
          "type": "int",
          "desc": "ConnectionLimitLowWater"
        },
        "BindAddress": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "BindAddress"
        },
        "ConnectionLimitHighWater": {
          "rw": false,
          "type": "int",
          "desc": "ConnectionLimitHighWater"
        },
        "WorkerName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "WorkerName"
        }
      },
      "class": "org.xnio.nio.NioTcpServer$1",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dXnio,provider\u003d\"nio\"": {
      "attr": {
        "Version": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Version"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        }
      },
      "class": "org.xnio.nio.NioXnio$3",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dXnio,provider\u003d\"nio\",worker\u003d\"XNIO-1\"": {
      "attr": {
        "ProviderName": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "ProviderName"
        },
        "ServerMXBeans": {
          "rw": false,
          "type": "[Ljavax.management.ObjectName;",
          "desc": "ServerMXBeans"
        },
        "WorkerPoolSize": {
          "rw": false,
          "type": "int",
          "desc": "WorkerPoolSize"
        },
        "WorkerQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "WorkerQueueSize"
        },
        "ShutdownRequested": {
          "rw": false,
          "type": "boolean",
          "desc": "ShutdownRequested"
        },
        "IoThreadCount": {
          "rw": false,
          "type": "int",
          "desc": "IoThreadCount"
        },
        "BusyWorkerThreadCount": {
          "rw": false,
          "type": "int",
          "desc": "BusyWorkerThreadCount"
        },
        "CoreWorkerPoolSize": {
          "rw": false,
          "type": "int",
          "desc": "CoreWorkerPoolSize"
        },
        "Name": {
          "rw": false,
          "type": "java.lang.String",
          "desc": "Name"
        },
        "MaxWorkerPoolSize": {
          "rw": false,
          "type": "int",
          "desc": "MaxWorkerPoolSize"
        }
      },
      "class": "org.xnio.nio.NioXnioWorker$NioWorkerMetrics",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "jolokia": {
    "type\u003dNotificationStore,agent\u003d1d56ce6a-jvm": {
      "op": {
        "pull": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            }
          ],
          "ret": "org.jolokia.server.core.service.notification.NotificationResult",
          "desc": "Operation exposed for management"
        }
      },
      "class": "org.jolokia.service.notif.pull.PullNotificationStore",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dConfig,agent\u003d1d56ce6a-jvm": {
      "op": {
        "resetDebugInfo": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "debugInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "MaxDebugEntries": {
          "rw": true,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "Debug": {
          "rw": true,
          "type": "boolean",
          "desc": "Attribute exposed for management"
        }
      },
      "class": "org.jolokia.server.core.backend.Config",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dServerHandler,agent\u003d1d56ce6a-jvm": {
      "op": {
        "mBeanServersInfo": {
          "args": [],
          "ret": "java.lang.String",
          "desc": "Operation exposed for management"
        }
      },
      "class": "org.jolokia.server.core.backend.MBeanServerHandler",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dDiscovery,agent\u003d1d56ce6a-jvm": {
      "op": {
        "lookupAgentsWithTimeout": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "java.util.List",
          "desc": "Operation exposed for management"
        },
        "lookupAgentsWithTimeoutAndMulticastAddress": {
          "args": [
            {
              "name": "p1",
              "type": "int",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "java.util.List",
          "desc": "Operation exposed for management"
        },
        "lookupAgents": {
          "args": [],
          "ret": "java.util.List",
          "desc": "Operation exposed for management"
        }
      },
      "class": "org.jolokia.service.discovery.JolokiaDiscovery",
      "desc": "Information on the management interface of the MBean"
    },
    "type\u003dHistory,agent\u003d1d56ce6a-jvm": {
      "op": {
        "setHistoryEntriesForOperation": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p4",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "setHistoryLimitForOperation": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p4",
              "type": "int",
              "desc": ""
            },
            {
              "name": "p5",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "updateAndAdd": {
          "args": [
            {
              "name": "p1",
              "type": "org.jolokia.server.core.request.JolokiaRequest",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "org.jolokia.json.JSONObject",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "resetHistoryEntries": {
          "args": [],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "setHistoryEntriesForAttribute": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p4",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p5",
              "type": "int",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        },
        "setHistoryLimitForAttribute": {
          "args": [
            {
              "name": "p1",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p2",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p3",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p4",
              "type": "java.lang.String",
              "desc": ""
            },
            {
              "name": "p5",
              "type": "int",
              "desc": ""
            },
            {
              "name": "p6",
              "type": "long",
              "desc": ""
            }
          ],
          "ret": "void",
          "desc": "Operation exposed for management"
        }
      },
      "attr": {
        "HistorySize": {
          "rw": false,
          "type": "int",
          "desc": "Attribute exposed for management"
        },
        "HistoryMaxEntries": {
          "rw": true,
          "type": "int",
          "desc": "Attribute exposed for management"
        }
      },
      "class": "org.jolokia.service.history.History",
      "desc": "Information on the management interface of the MBean"
    }
  },
  "jboss.threads": {
    "name\u003d\"XNIO-1\",type\u003dthread-pool": {
      "op": {
        "prestartCoreThread": {
          "args": [],
          "ret": "boolean",
          "desc": "prestartCoreThread"
        },
        "prestartAllCoreThreads": {
          "args": [],
          "ret": "int",
          "desc": "prestartAllCoreThreads"
        }
      },
      "attr": {
        "GrowthResistanceSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "GrowthResistanceSupported"
        },
        "MaximumPoolSize": {
          "rw": true,
          "type": "int",
          "desc": "MaximumPoolSize"
        },
        "PoolSize": {
          "rw": false,
          "type": "int",
          "desc": "PoolSize"
        },
        "CorePoolSize": {
          "rw": true,
          "type": "int",
          "desc": "CorePoolSize"
        },
        "AllowCoreThreadTimeOut": {
          "rw": true,
          "type": "boolean",
          "desc": "AllowCoreThreadTimeOut"
        },
        "Terminated": {
          "rw": false,
          "type": "boolean",
          "desc": "Terminated"
        },
        "GrowthResistance": {
          "rw": true,
          "type": "float",
          "desc": "GrowthResistance"
        },
        "CorePoolSizeSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CorePoolSizeSupported"
        },
        "SubmittedTaskCount": {
          "rw": false,
          "type": "long",
          "desc": "SubmittedTaskCount"
        },
        "Terminating": {
          "rw": false,
          "type": "boolean",
          "desc": "Terminating"
        },
        "QueueSize": {
          "rw": false,
          "type": "int",
          "desc": "QueueSize"
        },
        "KeepAliveTimeSeconds": {
          "rw": true,
          "type": "long",
          "desc": "KeepAliveTimeSeconds"
        },
        "Shutdown": {
          "rw": false,
          "type": "boolean",
          "desc": "Shutdown"
        },
        "CompletedTaskCount": {
          "rw": false,
          "type": "long",
          "desc": "CompletedTaskCount"
        },
        "LargestPoolSize": {
          "rw": false,
          "type": "int",
          "desc": "LargestPoolSize"
        },
        "QueueBounded": {
          "rw": false,
          "type": "boolean",
          "desc": "QueueBounded"
        },
        "CoreThreadPrestartSupported": {
          "rw": false,
          "type": "boolean",
          "desc": "CoreThreadPrestartSupported"
        },
        "ActiveCount": {
          "rw": false,
          "type": "int",
          "desc": "ActiveCount"
        },
        "MaximumQueueSize": {
          "rw": true,
          "type": "int",
          "desc": "MaximumQueueSize"
        },
        "QueueSizeModifiable": {
          "rw": false,
          "type": "boolean",
          "desc": "QueueSizeModifiable"
        },
        "SpinMissCount": {
          "rw": false,
          "type": "long",
          "desc": "SpinMissCount"
        },
        "LargestQueueSize": {
          "rw": false,
          "type": "int",
          "desc": "LargestQueueSize"
        },
        "RejectedTaskCount": {
          "rw": false,
          "type": "long",
          "desc": "RejectedTaskCount"
        }
      },
      "class": "org.jboss.threads.EnhancedQueueExecutor$MXBeanImpl",
      "desc": "Information on the management interface of the MBean"
    }
  }
}
